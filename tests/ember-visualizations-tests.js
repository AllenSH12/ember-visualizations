var JSHINTRC = {
    "predef": [
        "console",
        "Ember",
        "DS",
        "Handlebars",
        "Metamorph",
        "ember_assert",
        "ember_warn",
        "ember_deprecate",
        "ember_deprecateFunc",
        "require",
        "equal",
        "notEqual",
        "test",
        "testBoth",
        "testWithDefault",
        "raises",
        "deepEqual",
        "notDeepEqual",
        "start",
        "stop",
        "ok",
        "strictEqual",
        "notStrictEqual",
        "module",
        "expect",
        "minispade"
    ],

    "node" : false,
    "browser" : true,

    "boss" : true,
    "curly": false,
    "debug": false,
    "devel": false,
    "eqeqeq": true,
    "evil": true,
    "forin": false,
    "immed": false,
    "laxbreak": false,
    "newcap": true,
    "noarg": true,
    "noempty": false,
    "nonew": false,
    "nomen": false,
    "onevar": false,
    "plusplus": false,
    "regexp": false,
    "undef": true,
    "sub": true,
    "strict": false,
    "white": false,
    "eqnull": true
}
;

minispade.register('ember-visualizations/~tests/views/canvas_view_test', "(function() {/**\n  Copyright 2012 Christopher Meiklejohn and Basho Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n  All of the files in this project are under the project-wide license\n  unless they are otherwise marked.\n**/\n\nvar view;\n\nmodule('Ember.CanvasView', {\n  setup: function() {\n    view = Ember.CanvasView.create();\n  },\n\n  teardown: function() {\n    if(view) {\n      view.destroy();\n    }\n  }\n});\n\ntest('returns a height at a correct aspect ratio', function() {\n  expect(1);\n\n  view.set('containerWidth', 1080);\n\n  equal(view.get('height'), 330.6122448979592, 'should have a proportionate height');\n});\n\ntest('returns a width based on its container', function() {\n  expect(1);\n\n  view.set('containerWidth', 1080);\n\n  equal(view.get('width'), 1080, 'should have the correct width');\n});\n\n})();\n//@ sourceURL=ember-visualizations/~tests/views/canvas_view_test");minispade.register('ember-visualizations/~tests/views/histogram_view_test', "(function() {/**\n  Copyright 2012 Christopher Meiklejohn and Basho Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n  All of the files in this project are under the project-wide license\n  unless they are otherwise marked.\n**/\n\nvar view;\n\nmodule('Ember.HistogramView', {\n  setup: function() {\n    view = Ember.HistogramView.create({\n      width: 10,\n      height: 10\n    });\n  },\n\n  teardown: function() {\n    if(view) {\n      view.destroy();\n    }\n  }\n});\n\ntest('is generated from an array of values', function() {\n\n  var values = [1, 2, 3, 4, 5];\n\n  expect(4);\n\n  view.set('content', values);\n\n  view.get('histogram').map(function(i) { ok(i.x && i.y, 'should contain a coordinate pair'); });\n\n});\n\ntest('is generated using pre-binned values', function() {\n\n  var values = [{ x: 1, y: 1 }, { x: 2, y: 2 }];\n\n  expect(1);\n\n  view.set('content', values);\n\n  equal(view.get('histogram'), values, 'should match the provided input');\n\n});\n\ntest('is updated when content changes', function() {\n\n  var previousValues = [1, 2, 3, 4, 5],\n      currentValues  = [5, 6, 7, 8, 9],\n      previousHistogram,\n      currentHistogram;\n\n  expect(1);\n\n  view.set('content', previousValues);\n\n  previousHistogram = view.get('histogram');\n\n  view.set('content', currentValues);\n\n  currentHistogram = view.get('histogram');\n\n  notDeepEqual(currentHistogram, previousHistogram, 'should not be the same');\n\n});\n\ntest('is scaled correctly', function() {\n\n  var values = [{ x: 100, y: 100 }, { x: 800, y: 800 }];\n\n  expect(3);\n\n  view.set('content', values);\n\n  view.set('width', 10);\n\n  view.set('height', 10);\n\n  equal(view.get('yScale')(0),   10,   'should scale y correctly');\n\n  equal(view.get('yScale')(100), 8.75, 'should scale y correctly');\n\n  equal(view.get('yScale')(800), 0,    'should scale y correctly');\n\n});\n\ntest('is rendered', function() {\n\n  var values = [{ x: 100, y: 100 }, { x: 800, y: 800 }];\n\n  expect(1);\n\n  view.set('content', values);\n\n  Ember.run(function() {\n    view.append();\n  });\n\n  equal(view.$().find('rect').length, 2, 'should contain 2 rects');\n\n});\n\n})();\n//@ sourceURL=ember-visualizations/~tests/views/histogram_view_test");minispade.register('ember-visualizations/~tests/views/time_series_view_test', "(function() {/**\n  Copyright 2012 Christopher Meiklejohn and Basho Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n  All of the files in this project are under the project-wide license\n  unless they are otherwise marked.\n**/\n\nvar view;\n\nmodule('Ember.TimeSeriesView', {\n  setup: function() {\n    view = Ember.TimeSeriesView.create({\n      width: 10,\n      height: 10,\n      content: [{ x: 100, y: 100 }, { x: 800, y: 800 }]\n    });\n  },\n\n  teardown: function() {\n    if(view) {\n      view.destroy();\n    }\n  }\n});\n\ntest('returns max y value', function() {\n\n  expect(1);\n\n  equal(view.get('yMax'), 800, 'should return the max y-coordinate');\n\n});\n\ntest('is scaled correctly', function() {\n\n  expect(3);\n\n  equal(view.get('yScale')(0),   10,   'should scale y correctly');\n\n  equal(view.get('yScale')(100), 8.75, 'should scale y correctly');\n\n  equal(view.get('yScale')(800), 0,    'should scale y correctly');\n\n});\n\ntest('is rendered', function() {\n\n  expect(1);\n\n  Ember.run(function() {\n    view.append();\n  });\n\n  equal(view.$().find('path.series').length, 1, 'should contain 1 path');\n\n});\n\n})();\n//@ sourceURL=ember-visualizations/~tests/views/time_series_view_test");minispade.register('ember-visualizations/~tests/views/visualization_view_test', "(function() {/**\n  Copyright 2012 Christopher Meiklejohn and Basho Technologies, Inc.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n  All of the files in this project are under the project-wide license\n  unless they are otherwise marked.\n**/\n\nvar view;\n\nmodule('Ember.VisualizationView', {\n  setup: function() {\n    view = Ember.VisualizationView.create({\n      width: 10,\n      height: 10\n    });\n  },\n\n  teardown: function() {\n    if(view) {\n      view.destroy();\n    }\n  }\n});\n\ntest('returns the x value formatted', function() {\n  expect(1);\n\n  equal(view.get('xFormatter')(2), 2, 'should format the x value');\n});\n\ntest('returns the y value formatted', function() {\n  expect(1);\n\n  equal(view.get('yFormatter')(2), 2, 'should format the y value');\n});\n\ntest('is rendered', function() {\n  expect(1);\n\n  Ember.run(function() {\n    view.append();\n  });\n\n  equal(view.$().find('.axis').length, 2, 'should contain two axis');\n});\n\ntest('renders axes', function() {\n  expect(1);\n\n  Ember.run(function() {\n    view.append();\n  });\n\n  equal(view.$().find('.axis').length, 2, 'should contain two axis');\n});\n\ntest('renders gridlines', function() {\n  expect(2);\n\n  Ember.run(function() {\n    view.append();\n  });\n\n  equal(view.$().find('.x.grid').length, 1, 'should contain x-axis gridline grouping');\n\n  equal(view.$().find('.y.grid').length, 1, 'should contain y-axis gridline grouping');\n});\n\n})();\n//@ sourceURL=ember-visualizations/~tests/views/visualization_view_test");